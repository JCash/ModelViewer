local ANIMATIONS = {
	"Sit_Floor_Idle",
	"Sit_Chair_Idle",
	"Lie_Down",
	"Lie_Idle",
	"Death_B",
	"Spellcast_Long",
	"2H_Melee_Attack_Spin",
	"Jump_Full_Long",
	"Lie_StandUp",
	"Spellcast_Raise",
	"Cheer",
	"Unarmed_Melee_Attack_Punch_B",
	"2H_Melee_Attack_Chop",
	"1H_Melee_Attack_Stab",
	"1H_Ranged_Shooting",
	"2H_Melee_Attack_Stab",
	"2H_Ranged_Aiming",
	"2H_Ranged_Reload",
	"Dualwield_Melee_Attack_Stab",
	"Use_Item",
	"Walking_C",
	"Unarmed_Melee_Attack_Punch_A",
	"Throw",
	"Interact",
	"PickUp",
	"Dualwield_Melee_Attack_Chop",
	"1H_Ranged_Reload",
	"Dualwield_Melee_Attack_Slice",
	"Jump_Full_Short",
	"Sit_Floor_StandUp",
	"2H_Melee_Attack_Slice",
	"1H_Melee_Attack_Chop",
	"1H_Melee_Attack_Slice_Horizontal",
	"1H_Ranged_Aiming",
	"1H_Ranged_Shoot",
	"2H_Melee_Idle",
	"2H_Ranged_Shoot",
	"2H_Ranged_Shooting",
	"Block",
	"Block_Attack",
	"Block_Hit",
	"Blocking",
	"Idle",
	"Jump_Idle",
	"Running_B",
	"Unarmed_Idle",
	"Walking_A",
	"Walking_B",
	"Walking_Backwards",
	"1H_Melee_Attack_Slice_Diagonal",
	"Sit_Floor_Down",
	"Spellcast_Shoot",
	"Unarmed_Melee_Attack_Kick",
	"Hit_B",
	"Death_A",
	"Running_A",
	"Running_Strafe_Left",
	"Running_Strafe_Right",
	"Sit_Chair_Down",
	"Sit_Chair_StandUp",
	"2H_Melee_Attack_Spinning",
	"Hit_A",
	"Jump_Land",
	"Spellcasting",
	"Jump_Start",
	"Dodge_Backward",
	"Dodge_Forward",
	"Dodge_Left",
	"Dodge_Right",
	"Death_A_Pose",
	"Death_B_Pose",
	"Lie_Pose",
	"Sit_Chair_Pose",
	"Sit_Floor_Pose",
	"T-Pose",
	"Unarmed_Pose",
}

local WEAPONS = {
	"1H_Sword",
	"2H_Sword",
	"1H_Sword_Offhand",
	"Badge_Shield",
	"Rectangle_Shield",
	"Round_Shield",
	"Spike_Shield",
	"Knight_Helmet",
	"Knight_Cape",
}

function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post("@render:", "use_camera_projection")
	msg.post("camera", "acquire_camera_focus")

	--go.animate("main", "euler.y", go.PLAYBACK_LOOP_FORWARD, 360, go.EASING_LINEAR, 2)

	-- position directional light
	self.light = vmath.vector4(0, 0, go.get_position().z + 1, 0)
	model.set_constant("#model", "light", self.light)

	--model.set_mesh_enabled("#model", WEAPONS[1], false)
	model.set_mesh_enabled("#model", WEAPONS[2], false) -- 2h sword
	model.set_mesh_enabled("#model", WEAPONS[3], false) -- 1h sword offhand
	model.set_mesh_enabled("#model", WEAPONS[4], false) -- badge
	model.set_mesh_enabled("#model", WEAPONS[5], false) -- rectangle
	model.set_mesh_enabled("#model", WEAPONS[6], false) -- round
	--model.set_mesh_enabled("#model", WEAPONS[7], false) -- spike
	--model.set_mesh_enabled("#model", WEAPONS[8], false) -- helmet
	--model.set_mesh_enabled("#model", WEAPONS[9], false) -- cape
	self.touch = false
end

function on_input(self, action_id, action)
	if hash("touch") == action_id then
		self.touch = true
		if action.released then
			self.touch = false
		end

		if self.touch then
			local rot = go.get_rotation()
			rot = rot * vmath.quat_rotation_y(math.rad(15) * action.dx)
			go.set_rotation(rot)
		end
	elseif not action_id then
		-- move directional light based on input
		self.light.x = 2 * ((action.x - 480) / 480)
		self.light.y = 2 * ((action.y - 320) / 320)
		model.set_constant("#model", "light", self.light)
	end
end
